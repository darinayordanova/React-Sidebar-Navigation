{"version":3,"sources":["App/images/logo.svg","App/Navigation/MenuItem.js","data/menu.js","App/Navigation/Navigation.js","App/Container/Routes/routes.js","App/App.js","serviceWorker.js","App/Context/Common.js","index.js"],"names":["module","exports","ArrowToggle","eventKey","useState","open","setOpen","decoratedOnClick","useAccordionToggle","className","onClick","MenuItem","menuItem","MenuItemMain","activeClassName","to","path","img","src","alt","name","MenuItemInner","items","length","map","item","index","key","id","Accordion","Card","Header","Collapse","Body","menuLinks","Navigation","toggleMenu","setToggleMenu","menuItems","Nav","defaultActiveKey","logoBg","Home","lazy","Manage","Develop","Design","Project2","Project1","Milestones","Tasks","People","PeoplePeople","Companies","Workload","Chart","Portfolio","Categories","Dashboards","Activity","MyProjects","MyWork","Calendar","Planning","Projects","Profile","component","renderLoader","App","basename","fallback","routes","console","log","exact","Component","Boolean","window","location","hostname","match","CommonContext","createContext","CommonProvider","props","Provider","children","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.05eaafce.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.7c7c8ca3.svg\";","import React, { useState, useEffect, useContext } from 'react';\r\nimport { Nav, Accordion, Card, Button, useAccordionToggle } from \"react-bootstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { RiArrowDownSLine } from \"react-icons/ri\";\r\nfunction ArrowToggle({ eventKey }) {\r\n    const [open, setOpen] = useState(false)\r\n    const decoratedOnClick = useAccordionToggle(eventKey, () =>\r\n        setOpen(!open));\r\n\r\n    return (\r\n        <RiArrowDownSLine className={open ? \"arrow expand\" : \"arrow\"}\r\n            onClick={decoratedOnClick}\r\n        />\r\n\r\n    );\r\n}\r\nfunction MenuItem({ menuItem }) {\r\n    const MenuItemMain =\r\n        <NavLink activeClassName=\"active\" to={menuItem.path}>\r\n            {menuItem.img ? <img className=\"usericon\" src={menuItem.img} alt=\"userprofile\"/> : null}\r\n            {menuItem.name}\r\n        </NavLink>\r\n        ;\r\n\r\n    var MenuItemInner = menuItem.items.length > 0 ? (\r\n        menuItem.items.length > 0 ?\r\n            menuItem.items.map((item, index) => (\r\n                <MenuItem\r\n                    key={item.id}\r\n                    menuItem={item}\r\n                />\r\n            )) : null\r\n    ) : null;\r\n    return (\r\n        <>\r\n            {menuItem.items.length > 0 ?\r\n                <Accordion>\r\n                    <Card>\r\n                        <Card.Header>\r\n                            \r\n                            {MenuItemMain}<ArrowToggle eventKey={menuItem.id} />\r\n                        </Card.Header>\r\n\r\n\r\n                        <Accordion.Collapse eventKey={menuItem.id}>\r\n                            <Card.Body>\r\n                                {MenuItemInner}\r\n\r\n                            </Card.Body>\r\n                        </Accordion.Collapse>\r\n\r\n\r\n                    </Card>\r\n                </Accordion>\r\n                :\r\n                <>\r\n                    {MenuItemMain}\r\n                    {MenuItemInner}\r\n                </>\r\n            }\r\n\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default MenuItem;","export const menuLinks = [\r\n    {\r\n        id: 1,\r\n        name: \"Profile\",\r\n        path: '/profile',\r\n        img: \"https://images.unsplash.com/photo-1517365830460-955ce3ccd263?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=80\",\r\n        items: []\r\n    },\r\n    {\r\n        id: 4,\r\n        name: \"Home\",\r\n        path: '/home',\r\n        items: [\r\n            {\r\n                id: 5,\r\n                name: \"My Work\",\r\n                path: '/work',\r\n                items: [\r\n                    {\r\n                        id: 51,\r\n                        name: \"Tasks\",\r\n                        path: '/tasks',\r\n                        items: []\r\n                    },\r\n                    {\r\n                        id: 52,\r\n                        name: \"Milestones\",\r\n                        path: '/milestones',\r\n                        items: []\r\n                    },\r\n                    {\r\n                        id: 53,\r\n                        name: \"Events\",\r\n                        path: '/events',\r\n                        items: []\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                id: 6,\r\n                name: \"My projects\",\r\n                path: '/projects-status',\r\n                items: [{\r\n                    id: 61,\r\n                    name: \"Project 1\",\r\n                    path: '/project_1',\r\n                    items: []\r\n                },\r\n                {\r\n                    id: 62,\r\n                    name: \"Project 2\",\r\n                    path: '/project_2',\r\n                    items: []\r\n                }]\r\n            },\r\n            {\r\n                id: 621,\r\n                name: \"Activity\",\r\n                path: '/activity',\r\n                items: []\r\n            },\r\n            {\r\n                id: 623,\r\n                name: \"Dashboards\",\r\n                path: '/dashboards',\r\n                items: []\r\n            },\r\n\r\n        ]\r\n    },\r\n    {\r\n        id: 41,\r\n        name: \"Projects\",\r\n        path: '/projects',\r\n        items: [\r\n            {\r\n                id: 51,\r\n                name: \"Categories\",\r\n                path: '/categories',\r\n                items: [\r\n                    {\r\n                        id: 612,\r\n                        name: \"Design\",\r\n                        path: '/design',\r\n                        items: []\r\n                    },\r\n                    {\r\n                        id: 613,\r\n                        name: \"Develop\",\r\n                        path: '/develop',\r\n                        items: []\r\n                    },\r\n                    {\r\n                        id: 614,\r\n                        name: \"Manage\",\r\n                        path: '/manage',\r\n                        items: []\r\n                    }\r\n                ]\r\n            },\r\n\r\n        ]\r\n    },\r\n    {\r\n        id: 6142,\r\n        name: \"Planning\",\r\n        path: '/planning',\r\n        items: [\r\n            {\r\n                id: 6146,\r\n                name: \"Portfolio\",\r\n                path: '/portfolio',\r\n                items: []\r\n            },\r\n            {\r\n                id: 6147,\r\n                name: \"Chart\",\r\n                path: '/chart',\r\n                items: []\r\n            },\r\n            {\r\n                id: 6148,\r\n                name: \"Workload\",\r\n                path: '/workload',\r\n                items: []\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        id: 61421,\r\n        name: \"Calendar\",\r\n        path: '/calendar',\r\n        items: []\r\n    },\r\n    {\r\n        id: 614212,\r\n        name: \"People\",\r\n        path: '/people',\r\n        items: [\r\n            {\r\n                id: 614213,\r\n                name: \"Companies\",\r\n                path: '/companies',\r\n                items: []\r\n            },\r\n            {\r\n                id: 614214,\r\n                name: \"People\",\r\n                path: '/people/people',\r\n                items: []\r\n            },\r\n        ]\r\n    }\r\n]","import React, { useState } from \"react\";\r\nimport { Nav, Accordion, Card, Button, useAccordionToggle } from \"react-bootstrap\";\r\nimport { RiCloseLine, RiMenuLine } from 'react-icons/ri';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport './style.css'\r\nimport MenuItem from \"./MenuItem\"\r\nimport logoBg from '../images/logo.svg'\r\nimport { menuLinks } from '../../data/menu'\r\n\r\nexport default function Navigation() {\r\n  const [toggleMenu, setToggleMenu] = useState(false)\r\n  const [menuItems] = useState(menuLinks)\r\n\r\n  return (\r\n    <div className=\"d-flex\">\r\n      <Nav defaultActiveKey=\"news\" className={toggleMenu ? \"flex-column active\" : ' flex-column'}>\r\n        <NavLink activeClassName=\"logo-active\" to=\"/\">\r\n          <img src={logoBg} alt=\"logo\" className=\"navLogo\" />\r\n        </NavLink>\r\n        {\r\n          menuItems.map((item) => {\r\n            return <MenuItem\r\n              key={item.id}\r\n              menuItem={item}\r\n            />\r\n          })\r\n        }\r\n\r\n      </Nav>\r\n      {\r\n        toggleMenu ? <RiCloseLine className=\"menuIcon\" onClick={() => setToggleMenu(!toggleMenu)} /> : <RiMenuLine className=\"menuIcon\" onClick={() => setToggleMenu(!toggleMenu)} />\r\n      }\r\n    </div >\r\n  );\r\n};\r\n\r\n","import { lazy } from \"react\";\r\nconst Home = lazy(() => import(\"../Components/Home\"))\r\nconst Manage = lazy(() => import(\"../Components/Manage\"))\r\nconst Develop = lazy(() => import(\"../Components/Develop\"))\r\nconst Design = lazy(() => import(\"../Components/Design\"))\r\nconst Project2 = lazy(() => import(\"../Components/Project2\"))\r\nconst Project1 = lazy(() => import(\"../Components/Project1\"))\r\nconst Milestones = lazy(() => import(\"../Components/Milestones\"))\r\nconst Tasks = lazy(() => import(\"../Components/Tasks\"))\r\nconst People = lazy(() => import(\"../Components/People\"))\r\nconst PeoplePeople = lazy(() => import(\"../Components/PeoplePeople\"))\r\nconst Companies = lazy(() => import(\"../Components/Companies\"))\r\nconst Workload = lazy(() => import(\"../Components/Workload\"))\r\nconst Chart = lazy(() => import(\"../Components/Chart\"))\r\nconst Portfolio = lazy(() => import(\"../Components/Portfolio\"))\r\nconst Categories = lazy(() => import(\"../Components/Categories\"))\r\nconst Dashboards = lazy(() => import(\"../Components/Dashboards\"))\r\nconst Activity = lazy(() => import(\"../Components/Activity\"))\r\nconst MyProjects = lazy(() => import(\"../Components/MyProjects\"))\r\nconst MyWork = lazy(() => import(\"../Components/MyWork\"))\r\nconst Calendar = lazy(() => import(\"../Components/Calendar\"))\r\nconst Planning = lazy(() => import(\"../Components/Planning\"))\r\nconst Projects = lazy(() => import(\"../Components/Projects\"))\r\nconst Profile = lazy(() => import(\"../Components/Profile\"))\r\nconst Events = lazy(() => import(\"../Components/Events\"))\r\n\r\n\r\nexport default [\r\n    { path: \"/\", name: \"Home\", component: Home },\r\n    { path: \"/home\", name: \"Home\", component: Home },\r\n    { path: \"/manage\", name: \"Manage\", component: Manage },\r\n    { path: \"/develop\", name: \"Develop\", component: Develop },\r\n    { path: \"/design\", name: \"Design\", component: Design },\r\n    { path: \"/project_2\", name: \"Project2\", component: Project2 },\r\n    { path: \"/project_1\", name: \"Project1\", component: Project1 },\r\n    { path: \"/milestones\", name: \"Milestones\", component: Milestones },\r\n    { path: \"/tasks\", name: \"Tasks\", component: Tasks },\r\n    { path: \"/people\", name: \"People\", component: People },\r\n    { path: \"/companies\", name: \"Companies\", component: Companies },\r\n    { path: \"/workload\", name: \"Workload\", component: Workload },\r\n    { path: \"/portfolio\", name: \"Portfolio\", component: Portfolio },\r\n    { path: \"/chart\", name: \"Chart\", component: Chart },\r\n    { path: \"/categories\", name: \"Categories\", component: Categories },\r\n    { path: \"/events\", name: \"Events\", component: Events },\r\n    { path: \"/dashboards\", name: \"Dashboards\", component: Dashboards },\r\n    { path: \"/activity\", name: \"Activity\", component: Activity },\r\n    { path: \"/projects-status\", name: \"MyProjects\", component: MyProjects },\r\n    { path: \"/work\", name: \"MyWork\", component: MyWork },\r\n    { path: \"/calendar\", name: \"Calendar\", component: Calendar },\r\n    { path: \"/planning\", name: \"Planning\", component: Planning },\r\n    { path: \"/projects\", name: \"Projects\", component: Projects },\r\n    { path: \"/profile\", name: \"Profile\", component: Profile },\r\n    { path: \"/people/people\", name: \"PeoplePeople\", component: PeoplePeople },\r\n]","import React, { Component, Suspense } from \"react\";\r\n\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport Navigation from \"./Navigation/Navigation\";\r\nimport routes from \"./Container/Routes/routes\";\r\nimport './globalStyles.css'\r\n\r\nconst renderLoader = () => <p>Loading</p>;\r\n\r\n\r\nclass App extends Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Router\r\n                basename={\"\"}>\r\n                <div className=\"d-flex\">\r\n                    <Navigation />\r\n                    <div className=\"wrapper\">\r\n                        <Switch>\r\n                            <Suspense fallback={renderLoader}>\r\n                                {\r\n                                    routes.map(({ path, name, component }) => {\r\n\r\n                                        console.log(name)\r\n                                        return (\r\n                                            <Route exact key={path} path={path} component={component} />\r\n                                        )\r\n                                    })\r\n                                }\r\n                                \r\n                            </Suspense>\r\n                        </Switch>\r\n                    </div>\r\n                </div>\r\n            </Router>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { createContext } from \"react\";\r\n\r\nexport const CommonContext = createContext([]);\r\n\r\nexport function CommonProvider(props) {\r\n    return (\r\n        <CommonContext.Provider>\r\n            {props.children}\r\n        </CommonContext.Provider>);\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {CommonProvider} from \"./App/Context/Common\";\r\nReactDOM.render(\r\n  <CommonProvider>\r\n    <App />\r\n  </CommonProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}